"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.maxSize = void 0;
var bytes = __importStar(require("bytes"));
var utils_1 = require("../utils");
var maxSize = function (maxSize) {
    return function (errorMessage) {
        return function (uploadedFile) {
            var uploadedFileSizeInBytes = uploadedFile.size;
            var maxSizeInBytes = bytes.parse(maxSize);
            if (maxSize !== -1 && uploadedFileSizeInBytes > maxSizeInBytes) {
                var maxSizeFormatted = bytes.format(maxSizeInBytes);
                var actualSizeFormatted = bytes.format(uploadedFileSizeInBytes);
                return utils_1.formatMessage(errorMessage, [
                    uploadedFile.name,
                    maxSizeFormatted,
                    actualSizeFormatted,
                ]);
            }
            return null;
        };
    };
};
exports.maxSize = maxSize;
//# sourceMappingURL=max-size.js.map